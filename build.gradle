import java.util.regex.Matcher
import java.util.regex.Pattern

buildscript {
    ext.kotlin_version = "1.6.0"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.0"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.38.1"
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.5.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getCurrentFlavor() {

    Gradle gradle = getGradle()
    def pattern = Pattern.compile('([A-Z][A-Za-z]+)(Release|Debug)')
    def flavor = ""

    gradle.getStartParameter().getTaskNames().any { name ->
        Matcher matcher = pattern.matcher(name)
        if (matcher.find()) {
            flavor = matcher.group(0).toLowerCase()
            return true
        }

    }

    return flavor
}

def getProps(path) {
    Properties properties = new Properties()
    properties.load(new FileInputStream(file(path)))
    return properties
}

ext {
    flavor = ""
    filePath = ""
    buildFlavour = getCurrentFlavor()

    if (buildFlavour.empty) {
        flavor = "dev"
        filePath = "config/debug/"
    }else if(buildFlavour == "devdebug"){
        flavor = "dev"
        filePath = "config/debug/"
    }else if(buildFlavour == "devrelease"){
        flavor = "dev"
        filePath = "config/release/"
    }else if(buildFlavour == "proddebug"){
        flavor = "prod"
        filePath = "config/debug/"
    }else if(buildFlavour == "prodrelease"){
        flavor = "prod"
        filePath = "config/release/"
    }

    project.logger.lifecycle("config_filepath::::" + filePath + flavor + '.properties')
    config = getProps(filePath + flavor + '.properties')

}