plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

def getSecret = { key ->

    Properties props = new Properties()

    if (getCurrentFlavor().empty) {
        props.load(new FileInputStream(new File("config/debug/dev.properties")))
    } else if (getCurrentFlavor() == 'devdebug') {
        props.load(new FileInputStream(new File("config/debug/dev.properties")))
    } else if (getCurrentFlavor() == 'proddebug') {
        props.load(new FileInputStream(new File("config/debug/prod.properties")))
    }else if (getCurrentFlavor() == 'devrelease') {
        props.load(new FileInputStream(new File("config/release/dev.properties")))
    } else if (getCurrentFlavor() == 'prodrelease') {
        props.load(new FileInputStream(new File("config/release/prod.properties")))
    }
    return props[key]
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.newsapp"
        minSdk 28
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

        buildFeatures {
            viewBinding true
        }

    applicationVariants.all { variant ->
        variant.buildConfigField "String", "BASE_URL", getSecret('BASE_URL')
        variant.buildConfigField "String", "API_KEY", getSecret('API_KEY')
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/activities',
                            'src/main/res/layouts/fragments',
                            'src/main/res/layouts/items',
                            'src/main/res/layouts/custom-views',
                            'src/main/res/layouts',
                            'src/main/res']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "api"

    testOptions {
        animationsDisabled = true
    }

    productFlavors {
        dev {
            // Assigns this product flavor to the 'version' flavor dimension.
            applicationIdSuffix ".dev"
            manifestPlaceholders = [applicationLabel: "@string/app_name_dev"]
            dimension 'api'
        }

        prod {
            applicationIdSuffix ".prod"
            manifestPlaceholders = [applicationLabel: "@string/app_name"]
            dimension 'api'
        }
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2'

    implementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    implementation 'com.google.dagger:hilt-android:2.38.1'

    //jetpack navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    kapt 'com.google.dagger:hilt-android-compiler:2.38.1'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha01'

    // paging library
    implementation "androidx.paging:paging-runtime:3.1.1"

    // Room
    implementation "androidx.room:room-runtime:2.4.3"
    kapt "androidx.room:room-compiler:2.4.3"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.4.3"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'
//    okhttp idling resource
    implementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    implementation "androidx.test.espresso:espresso-idling-resource:3.5.0-alpha07"
//    tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.mockito:mockito-android:4.4.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.2'
    testImplementation "androidx.paging:paging-common:3.1.1"

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation('com.adevinta.android:barista:4.2.0') {
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation 'androidx.navigation:navigation-testing:2.5.2'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
}